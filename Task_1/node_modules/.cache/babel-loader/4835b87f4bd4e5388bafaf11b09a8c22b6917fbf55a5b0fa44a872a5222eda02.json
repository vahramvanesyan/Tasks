{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vahram\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\homevork\\\\src\\\\components\\\\ProductList.js\",\n  _s = $RefreshSig$();\n// import React, { useContext } from \"react\";\n// import { ProductContext } from \"../Context\";\n\n// export const ProductList = () => {\n//     const { products, moveToCart, isAddedToCart, searchCategory } = useContext(ProductContext)\n\n//     const filteredProducts = searchCategory\n//     ? products.filter(elm => elm.category.toLowerCase().startsWith(searchCategory.toLowerCase()))\n//     : products;\n\n//     const handleChange = (e) => {\n//         setSearchInput(e.target.value); // Обновляем состояние введенным значением\n//     };\n\n//     const handleKeyPress = (e) => {\n//         if (e.key === \"Enter\") {\n//             handleSearch(searchInput); // Вызываем функцию поиска с введенным значением\n//         }\n//     };\n\n//         return (\n//             <div>\n//                 {isAddedToCart && (\n//                     <div className=\"alert alert-success\" role=\"alert\">\n//                         Product has been added to cart!\n//                     </div>\n//                 )}\n//                 {/* Поле ввода для поиска */}\n//                 <input\n//                     type=\"text\"\n//                     value={searchInput}\n//                     onChange={handleChange}\n//                     onKeyPress={handleKeyPress} // Привязываем обработчик нажатия клавиши \"Enter\"\n//                     placeholder=\"Search by category\"\n//                 />\n//                 <div className=\"grid-container\">\n//                     {products.map(elm => (\n//                         <div key={elm.id} className=\"card\">\n//                             <img src={elm.image} style={{ width: 200, height: 200 }} />\n//                             <p className=\"text-dark\">{elm.category}</p>\n//                             <div className=\"card-content\">\n//                                 <p>{elm.title}</p>\n//                                 <p className=\"card-text\">{elm.price} USD</p>\n//                             </div>\n//                             <button className=\"btn btn-danger\" onClick={() => moveToCart(elm)}>Move</button>\n//                         </div>\n//                     ))}\n//                 </div>\n//             </div>\n//         );\n//     };\n\nimport React, { useContext, useState } from \"react\";\nimport { ProductContext } from \"../Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductList = () => {\n  _s();\n  const {\n    products,\n    moveToCart,\n    isAddedToCart,\n    handleSearch\n  } = useContext(ProductContext);\n  const [searchInput, setSearchInput] = useState(\"\"); // Объявляем состояние для хранения введенного пользователем значения\n\n  // Обработчик изменения значения поля ввода поиска\n  const handleChange = e => {\n    setSearchInput(e.target.value); // Обновляем состояние введенным значением\n  };\n\n  // Обработчик нажатия клавиши \"Enter\"\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      handleSearch(searchInput); // Вызываем функцию поиска с введенным значением\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isAddedToCart && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      role: \"alert\",\n      children: \"Product has been added to cart!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchInput,\n      onChange: handleChange,\n      onKeyPress: handleKeyPress // Привязываем обработчик нажатия клавиши \"Enter\"\n      ,\n      placeholder: \"Search by category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: products.map(elm => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: elm.image,\n          style: {\n            width: 200,\n            height: 200\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-dark\",\n          children: elm.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: elm.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: [elm.price, \" USD\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: () => moveToCart(elm),\n          children: \"Move\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, elm.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductList, \"4RZEPV50EJMCb11CMhJozkyvGTI=\");\n_c = ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useContext","useState","ProductContext","jsxDEV","_jsxDEV","ProductList","_s","products","moveToCart","isAddedToCart","handleSearch","searchInput","setSearchInput","handleChange","e","target","value","handleKeyPress","key","children","className","role","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onKeyPress","placeholder","map","elm","src","image","style","width","height","category","title","price","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/Vahram/OneDrive/Рабочий стол/homevork/src/components/ProductList.js"],"sourcesContent":["// import React, { useContext } from \"react\";\r\n// import { ProductContext } from \"../Context\";\r\n\r\n// export const ProductList = () => {\r\n//     const { products, moveToCart, isAddedToCart, searchCategory } = useContext(ProductContext)\r\n\r\n//     const filteredProducts = searchCategory\r\n//     ? products.filter(elm => elm.category.toLowerCase().startsWith(searchCategory.toLowerCase()))\r\n//     : products;\r\n\r\n//     const handleChange = (e) => {\r\n//         setSearchInput(e.target.value); // Обновляем состояние введенным значением\r\n//     };\r\n\r\n//     const handleKeyPress = (e) => {\r\n//         if (e.key === \"Enter\") {\r\n//             handleSearch(searchInput); // Вызываем функцию поиска с введенным значением\r\n//         }\r\n//     };\r\n\r\n//         return (\r\n//             <div>\r\n//                 {isAddedToCart && (\r\n//                     <div className=\"alert alert-success\" role=\"alert\">\r\n//                         Product has been added to cart!\r\n//                     </div>\r\n//                 )}\r\n//                 {/* Поле ввода для поиска */}\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     value={searchInput}\r\n//                     onChange={handleChange}\r\n//                     onKeyPress={handleKeyPress} // Привязываем обработчик нажатия клавиши \"Enter\"\r\n//                     placeholder=\"Search by category\"\r\n//                 />\r\n//                 <div className=\"grid-container\">\r\n//                     {products.map(elm => (\r\n//                         <div key={elm.id} className=\"card\">\r\n//                             <img src={elm.image} style={{ width: 200, height: 200 }} />\r\n//                             <p className=\"text-dark\">{elm.category}</p>\r\n//                             <div className=\"card-content\">\r\n//                                 <p>{elm.title}</p>\r\n//                                 <p className=\"card-text\">{elm.price} USD</p>\r\n//                             </div>\r\n//                             <button className=\"btn btn-danger\" onClick={() => moveToCart(elm)}>Move</button>\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//             </div>\r\n//         );\r\n//     };\r\n\r\n\r\n\r\nimport React, { useContext, useState } from \"react\";\r\nimport { ProductContext } from \"../Context\";\r\n\r\nexport const ProductList = () => {\r\n    const { products, moveToCart, isAddedToCart, handleSearch } = useContext(ProductContext);\r\n    const [searchInput, setSearchInput] = useState(\"\"); // Объявляем состояние для хранения введенного пользователем значения\r\n\r\n    // Обработчик изменения значения поля ввода поиска\r\n    const handleChange = (e) => {\r\n        setSearchInput(e.target.value); // Обновляем состояние введенным значением\r\n    };\r\n\r\n    // Обработчик нажатия клавиши \"Enter\"\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            handleSearch(searchInput); // Вызываем функцию поиска с введенным значением\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {isAddedToCart && (\r\n                <div className=\"alert alert-success\" role=\"alert\">\r\n                    Product has been added to cart!\r\n                </div>\r\n            )}\r\n            {/* Поле ввода для поиска */}\r\n            <input\r\n                type=\"text\"\r\n                value={searchInput}\r\n                onChange={handleChange}\r\n                onKeyPress={handleKeyPress} // Привязываем обработчик нажатия клавиши \"Enter\"\r\n                placeholder=\"Search by category\"\r\n            />\r\n            <div className=\"grid-container\">\r\n                {products.map(elm => (\r\n                    <div key={elm.id} className=\"card\">\r\n                        <img src={elm.image} style={{ width: 200, height: 200 }} />\r\n                        <p className=\"text-dark\">{elm.category}</p>\r\n                        <div className=\"card-content\">\r\n                            <p>{elm.title}</p>\r\n                            <p className=\"card-text\">{elm.price} USD</p>\r\n                        </div>\r\n                        <button className=\"btn btn-danger\" onClick={() => moveToCart(elm)}>Move</button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}